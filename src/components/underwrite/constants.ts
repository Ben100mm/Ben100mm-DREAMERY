/**
 * Default values and constants for UnderwritePage
 * Extracted from UnderwritePage.tsx for better maintainability
 */

import {
  defaultSeasonalFactors,
  defaultMarketConditions,
  defaultLocationFactors,
} from "../../utils/advancedCalculations";
import { DealState } from "./types";

/**
 * Get current date in YYYY-MM-DD format
 */
const getCurrentDate = (): string => {
  const now = new Date();
  const year = now.getFullYear();
  const month = String(now.getMonth() + 1).padStart(2, "0");
  const day = String(now.getDate()).padStart(2, "0");
  return `${year}-${month}-${day}`;
};

/**
 * Default state for the underwriting calculator
 */
export const defaultState: DealState = {
  propertyType: "Single Family",
  operationType: "Buy & Hold",
  offerType: "Conventional",
  propertyAddress: "",
  agentOwner: "",
  call: "",
  email: "",
  analysisDate: getCurrentDate(),
  listedPrice: 160000,
  purchasePrice: 160000,
  percentageDifference: 0,
  loan: {
    downPayment: 32000,
    loanAmount: 128000,
    annualInterestRate: 7,
    monthlyPayment: 800,
    annualPayment: 9600,
    interestOnly: false,
    balloonDue: 0,
    amortizationAmount: 128000,
    amortizationYears: 50,
    closingCosts: 0,
    rehabCosts: 0,
  },
  subjectTo: {
    paymentToSeller: 0,
    loans: [],
    totalLoanBalance: 0,
    totalMonthlyPayment: 0,
    totalAnnualPayment: 0,
  },
  hybrid: {
    downPayment: 0,
    loan3Amount: 0,
    annualInterestRate: 0,
    monthlyPayment: 0,
    annualPayment: 0,
    loanTerm: 30,
    interestOnly: false,
    balloonDue: 0,
    paymentToSeller: 0,
    subjectToLoans: [],
    totalLoanBalance: 0,
    totalMonthlyPayment: 0,
    totalAnnualPayment: 0,
  },
  fixFlip: {
    arv: 0,
    holdingPeriodMonths: 0,
    holdingCosts: 0,
    sellingCostsPercent: 0,
    targetPercent: 70,
    rehabCost: 0,
    maximumAllowableOffer: 0,
    projectedProfit: 0,
    roiDuringHold: 0,
    annualizedRoi: 0,
    exitStrategies: [],
  },
  brrrr: {
    arv: 0,
    refinanceLtv: 0,
    refinanceInterestRate: 0,
    loanTerm: 0,
    newMonthlyPayment: 0,
    originalCashInvested: 0,
    cashOutAmount: 0,
    remainingCashInDeal: 0,
    newCashOnCashReturn: 0,
    refinanceClosingCosts: 0,
    effectiveCashOut: 0,
    ltvConstraint: true,
    exitStrategies: [],
  },
  ops: {
    principalAndInterest: 800,
    totalSubtoLoans: 0,
    taxes: 54,
    insurance: 50,
    gasElectric: 0,
    internet: 0,
    hoa: 33,
    cleaner: 0,
    monthlyRentToLandlord: 2000,
    waterSewer: 0,
    heat: 0,
    lawnSnow: 0,
    phoneBill: 0,
    extra: 0,
    maintenance: 0,
    vacancy: 0,
    management: 0,
    capEx: 0,
    opEx: 0,
    utilitiesPct: 0,
    expensesWithoutMortgage: 0,
    monthlyExpenses: 0,
    monthlyExpensesPercent: 0,
    yearlyExpenses: 0,
    expensesWithMortgage: 0,
    monthlyExpensesWithMortgage: 0,
    yearlyExpensesWithMortgage: 0,
  },
  sfr: { monthlyRent: 1300, grossMonthlyIncome: 0, grossYearlyIncome: 0 },
  multi: {
    unitRents: [1300, 1300],
    grossMonthlyIncome: 0,
    grossYearlyIncome: 0,
  },
  str: {
    unitDailyRents: [100, 100],
    unitMonthlyRents: [3000, 3000],
    dailyCleaningFee: 0,
    laundry: 0,
    activities: 0,
    avgNightsPerMonth: 0,
    grossDailyIncome: 0,
    grossMonthlyIncome: 0,
    grossYearlyIncome: 0,
  },
  enhancedSTR: {
    averageDailyRate: 150,
    occupancyRate: 75,
    channelFees: {
      airbnb: 14,
      vrbo: 8,
      direct: 0,
    },
    channelMix: {
      airbnb: 60,
      vrbo: 30,
      direct: 10,
    },
    averageLengthOfStay: 3,
    turnoverDays: 1,
    minimumStay: 2,
    blockedDays: 30,
    dynamicPricing: true,
    weekendPremium: 20,
    useEnhancedModel: false,
  },
  officeRetail: {
    squareFootage: 5000,
    rentPerSFMonthly: 2.5,
    occupancyRatePct: 90,
    extraMonthlyIncome: 0,
  },
  land: {
    acreage: 1,
    zoning: "Residential",
    extraMonthlyIncome: 0,
  },
  arbitrage: {
    deposit: 2000,
    monthlyRentToLandlord: 0,
    estimateCostOfRepairs: 0,
    furnitureCost: 0,
    otherStartupCosts: 0,
    startupCostsTotal: 0,
  },
  appreciation: {
    appreciationPercentPerYear: 3,
    yearsOfAppreciation: 3,
    futurePropertyValue: 0,
    refinanceLtv: 70,
    refinancePotential: 0,
    remainingBalanceAfterRefi: 0,
  },
  showBothPaybackMethods: false,
  paybackCalculationMethod: "initial",
  reservesCalculationMethod: "months",
  reservesMonths: 3,
  reservesFixedAmount: 0,
  includeVariableExpensesInBreakEven: false,
  includeVariablePctInBreakeven: false,
  proFormaPreset: "moderate",
  customProFormaPresets: [],
  selectedCustomPreset: undefined,
  sensitivityAnalysis: {
    showSensitivity: false,
    sensitivityRange: 20,
    sensitivitySteps: 5,
  },
  benchmarkComparison: { showBenchmarks: false, includeBenchmarks: true },
  revenueInputs: {
    totalRooms: 1,
    averageDailyRate: 150,
    occupancyRate: 75,
    seasonalVariations: { q1: 0.8, q2: 1.0, q3: 1.2, q4: 0.9 },
    fixedAnnualCosts: 50000,
    fixedMonthlyCosts: 4167,
  },
  breakEvenAnalysis: {
    showBreakEven: false,
    breakEvenOccupancy: 0,
    breakEvenADR: 0,
    breakEvenRevenue: 0,
    marginOfSafety: 0,
  },
  activeProFormaTab: "presets",
  marketType: "stable" as const,
  marketConditions: defaultMarketConditions.stable,
  exitStrategies: [
    {
      timeframe: 5,
      sellingCosts: 6,
      capitalGainsTax: 20,
      depreciationRecapture: 25,
      marketAppreciation: 0.04,
    },
    {
      timeframe: 10,
      sellingCosts: 6,
      capitalGainsTax: 20,
      depreciationRecapture: 25,
      marketAppreciation: 0.04,
    },
    {
      timeframe: 15,
      sellingCosts: 6,
      capitalGainsTax: 20,
      depreciationRecapture: 25,
      marketAppreciation: 0.04,
    },
  ],
  seasonalFactors: defaultSeasonalFactors,
  propertyAge: {
    age: 15,
    maintenanceCostMultiplier: 1.2,
    utilityEfficiencyMultiplier: 0.9,
    insuranceCostMultiplier: 1.1,
    expectedLifespan: 50,
  },
  locationFactors: defaultLocationFactors.suburban,
  riskFactors: {
    marketVolatility: 5,
    tenantQuality: 7,
    propertyCondition: 6,
    locationStability: 8,
    financingRisk: 4,
  },
  taxImplications: {
    propertyTaxDeduction: true,
    mortgageInterestDeduction: true,
    depreciationDeduction: true,
    repairExpenseDeduction: true,
    taxBracket: 24,
  },
  enhancedTaxConfig: {
    propertyTaxDeduction: true,
    mortgageInterestDeduction: true,
    depreciationDeduction: true,
    repairExpenseDeduction: true,
    taxBracket: 24,
    investorAGI: 100000,
    materialParticipation: false,
    professionalStatus: false,
    qbiEligible: true,
    investmentType: "residential",
    stateTaxRate: 0,
    marriedFilingJointly: true,
  },
  useEnhancedTaxCalculation: false,
  exitStrategyResults: undefined,
  refinanceScenarioResults: undefined,
  taxImplicationResults: undefined,
  riskScoreResults: undefined,
  confidenceIntervalResults: undefined,
  inflationProjections: undefined,
  irrHoldPeriodYears: 5,
  irrIncomeGrowthRate: 2,
  irrExpenseGrowthRate: 3,
  irrSellingCostsPct: 7,
  showIrrCashFlowBreakdown: false,
  capitalEvents: {
    events: [],
    totalExpectedCost: 0,
    averageAnnualCost: 0,
  },
  showConfidenceIntervals: false,
  uncertaintyParameters: {
    incomeUncertainty: 0.15,
    expenseUncertainty: 0.10,
    occupancyUncertainty: 0.10,
    appreciationUncertainty: 0.20,
    confidenceLevel: 80,
  },
  exchange1031: {
    enabled: false,
    relinquishedPropertyValue: 0,
    relinquishedPropertyBasis: 0,
    relinquishedPropertyDepreciation: 0,
    relinquishedPropertyMortgage: 0,
    replacementPropertyValue: 0,
    replacementPropertyMortgage: 0,
    qualifiedIntermediaryFee: 1500,
    otherExchangeCosts: 500,
    identificationDeadline: '',
    closingDeadline: '',
    deferredGain: 0,
    recognizedGain: 0,
    carryoverBasis: 0,
    cashBoot: 0,
    mortgageBoot: 0,
    totalTaxableGain: 0,
    estimatedTaxLiability: 0,
    netProceedsToReinvest: 0,
  },
  proFormaAuto: true,
  validationMessages: [],
  showAmortizationOverride: false,
  snackbarOpen: false,
};

